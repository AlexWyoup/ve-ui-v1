<!--
** Copyright [2013-2015] [Megam Systems]
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
** http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
-->
<% content_for :onecat_contents do %>
<% provide(:title, "Torpedo Overview") %>

<div class="rt-box col-xs-12 col-sm-8 col-md-9 col-lg-9 col-xl-9">
  <div class="">
    <div class="row c_pading-b15">
      <div class="storage_top">
        <div class="col-xs-12 col-sm-6 col-md-6">
          <h3>
            <b>
              Torpedo Overview
            </b>
          </h3>
        </div>
        <div class="col-xs-12 col-sm-6 col-md-6 settings_grid yf-upload-cover">
          <a class="btn blue col-xs-12 col-sm-6 pull-right" data-toggle="modal" href="#app-1">Bind a service</a>
        </div>

      </div>
    </div>
  </div>
  <div class="bottom-divider"></div>
  <div class="row">
    <div class="col-xs-12 col-sm-9 col-md-9 br_grey">

      <% domain = assembly.inputs.select { |x| x["key"] == "domain" }[0]['value'] %>
      <% @logname = "#{assembly.name}.#{domain}" %>
        <%= render 'catalogs/mycomponent' %>
  </div>

    <div class="col-sm-3 storage-rt-list">
      <dl><h3>Usage</h3>
         <dt><%= t('overviews.name') %></dt>
         <dd><%= assembly.name %>
           <%= t('marketplace.megambox') %></dd>
        <dt class="margin-top-20"></dt>
        <dt><%= t('overviews.available_ram') %></dt>
        <dd><%= assembly.inputs.select { |x| x["key"] == "ram" }[0]['value'] %>
          <%= t('overviews.mb') %></dd>
        <dt class="margin-top-20"></dt>
        <dt><%= t('overviews.cpu_core') %></dt>
        <dd><%= assembly.inputs.select { |x| x["key"] == "cpu" }[0]['value'] %></dd>
        <dt class="margin-top-20"></dt>
        <dt><%= t('overviews.os') %></dt>
        <dd><%= image_tag  "logos/#{assembly.tosca_type.split('.').last}.png", :alt => "" %>
        <dt class="margin-top-20"></dt>
        <dt>
          <%= t('overviews.ip') %></dt>
        <dd><% ip = parse_key_value_pair(assembly.outputs, "ip") %>
          <%= ip if ip != "" %>
          <%= t('overviews.not_get_ip') if ip == "" %></dd>
          <dt class="margin-top-20"></dt>
                                <dt>URL</dt>
                                <dd>megam.com <i class="c_icon-form"></i>
                                  <div class='demo-area'>
  <button class='my_clip_button' data-clipboard-target='fe_text' data-clipboard-text='Default clipboard text from attribute' id='d_clip_button' title='Click me to copy to clipboard.'>
    <b>Copy To Clipboard...</b>
  </button>
  <h4>
    <label for='fe_text'>Change Copy Text Here</label>
  </h4>
  <textarea cols='50' id='fe_text' rows='3'>Copy me!</textarea>
  <h4>
    <label for='testarea'>Paste Text Here</label>
  </h4>
  <textarea cols='50' id='testarea' rows='3'></textarea>
  <p>
    <button id='clear-test'>Clear Test Area</button>
  </p>
</div>
                                </dd>
        <dt class="margin-top-20"></dt>
        <dt>Region</dt>
        <dd><img src="assets/images/flag_IN.png">
          INDIA</dd>
      </dl>
    </div>
  </div>
  </div>

  <% end %>
  <%= render :template => "catalogs/show", :locals => {:cattype => Assemblies::TORPEDO} %>


  <script type="text/javascript">
  $(document).ready(function () {
    $('[data-toggle="popover"]').popover({
      'html': 'true'
    });
  });


  	$('.create_bucket_modal').click(function(e) {
  		$('#create_bucket').modal();
  			});
  		$('.inner-menu').click(function(e) {
  			e.preventDefault();
  			$('.inner-child').toggle();
  		});
  		//storage left menu
  		$('.storage_left_add_inner').hide();
  		$('.storage_left_add a ').click(function() {
  		// e.preventDefault();
  		$('.storage_left_add_inner').slideToggle();
  		});
  		// $('.storage-popup').hide();
  		// storage overview pop up menu
  		$('.my_bucket_inner').bind('contextmenu', function(e) {
  			e.preventDefault();
  			$('.storage-popup').css({
  				'top' : e.pageY,
  				'left' : e.pageX,
  			});
  			$('#bucketName').val($(event.currentTarget).attr('id'));
  			//$.session.set('bucketname', $(event.currentTarget).attr('id'));
  			$('.storage-popup').show();
  					return false;
  			});
  	// hide storage menu when clicked outside the div
  	$(document).on('click', function(e) {
  		if ($(e.target).closest(".my_bucket_inner").length === 0) {
  			$('.storage-popup').hide();
  		}
  	});



    <script>
  $(document).ready(function() {
    var clip = new ZeroClipboard($("#d_clip_button"))
  });

  $("#clear-test").on("click", function(){
    $("#fe_text").val("Copy me!");
    $("#testarea").val("");
  });
</script>
  	// for upload
  	/*$(function() {
  	$('#file_upload').fileupload({
  	  forceIframeTransport: true,    // VERY IMPORTANT.  you will get 405 Method Not Allowed if you don't add this.
  	  autoUpload: true,
  	  add: function (event, data) {
  			//Ajax-1 started
  			$.ajax({
  				type: 'GET',
  				url: '/sign_auth',
  				success:  completeHandler = function(data) {
          //Ajax-2 started
  					$.ajax({
  						url: "http://192.168.1.248/arun_accet/"+ data.files[0].name +"?AWSAccessKeyId=Y71TT566EPWU9AIV8CE8&Expires=1444810624&Signature=%2BCJQRBGxkRi0R8wXkmmpTKKESO8%3D",  //server script to process data
  	      		type: 'PUT',
  						beforeSend: function (request)
              {
                  request.setRequestHeader("x_amz_acl", "private");
  								request.setRequestHeader("x_amz_storage_class", "STANDARD");
  								request.setRequestHeader("content_type", "application/octet-stream");
  								request.setRequestHeader("content_length", "12345");
              },
  						processData: false,
  	      		data: data.files[0],
  						//Ajax events
  	      		success:  completeHandler = function(data) {

  						if(navigator.userAgent.indexOf('Chrome')) {
  								var catchFile = $(":file").val().replace(/C:\\fakepath\\/i, '');
  						}
  						else {
  							var catchFile = $(":file").val();
  						}
  						var writeFile = $(":file");
  						writeFile.html(writer(catchFile));
  						$("*setIdOfImageInHiddenInput*").val(data.logo_id);
  	      		},
  						error: errorHandler = function() {
  							alert("Inner ajax failed");
  						},
         	//ajax-2
  	    	});
  				},
  				error: errorHandler = function() {
  					alert("Outer ajax failed");
  				},
  			//ajax-1
  			});
  	  },
  	});
  }); */
