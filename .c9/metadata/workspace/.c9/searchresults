{"changed":true,"filter":false,"title":"Search Results","tooltip":"/.c9/searchresults","value":"Searching for \u0001No api\u0001 in\u0001your entire workspace\u0001 (Found 3 matches in 2 files)\n\n/lib/vertice_resource.rb:\n\t28:       Rails.logger.debug \"No api #{jlaz}.#{jmethod} found.\"\n\n/log/development.log:\n\t167: No api Megam::Account.login found.\n\t181: No api Megam::Account.login found.\n\nFound 3 matches in 2 files \n\n","undoManager":{"mark":-2,"position":46,"stack":[[{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"insert","lines":[" "],"id":1},{"start":{"row":0,"column":0},"end":{"row":0,"column":1},"action":"remove","lines":[" "]},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001LOGIN\u0001 in\u0001/app/models/api\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/app/models/api/accounts.rb:",""],"id":2},{"start":{"row":3,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["\t19:     def login(params)","\t20:       result = api_request(ACCOUNT,LOGIN, params)    ","",""]}],[{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["Found 2 matches in 1 file ",""],"id":3}],[{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":0,"column":41},"end":{"row":0,"column":69},"action":"insert","lines":[" (Found 2 matches in 1 file)"]}],[{"start":{"row":0,"column":0},"end":{"row":8,"column":0},"action":"remove","lines":["Searching for \u0001LOGIN\u0001 in\u0001/app/models/api\u0001 (Found 2 matches in 1 file)","","/app/models/api/accounts.rb:","\t19:     def login(params)","\t20:       result = api_request(ACCOUNT,LOGIN, params)    ","","Found 2 matches in 1 file ","",""],"id":5},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001SHOW\u0001 in\u0001/app/models/api\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/app/models/api/accounts.rb:",""],"id":6},{"start":{"row":3,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["\t25:       result = api_request(ACCOUNT,SHOW, params)    ","",""]},{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["/app/models/api/addons.rb:",""]},{"start":{"row":6,"column":0},"end":{"row":13,"column":0},"action":"insert","lines":["\t27:         # This shows a single marketplace item. eg: 1-Ubuntu (Refer Marketplaces::list for more info)","\t28:         def show(api_params)","\t29:             raw = api_request(ADDONS, SHOW, api_params)","","/app/models/api/assemblies.rb:","\t88:                         Api::Assembly.new.show(api_params.merge(id: one_assembly, asms_id: one_assemblies.id)).baked","",""]}],[{"start":{"row":13,"column":0},"end":{"row":18,"column":0},"action":"insert","lines":["/app/models/api/assembly.rb:","\t33:     def show(api_params, &_block)","\t34:       raw = api_request(ASSEMBLY, SHOW, api_params)","\t62:             one_component = Components.new.show(api_params.merge('id' => one_component)).components","",""],"id":7},{"start":{"row":18,"column":0},"end":{"row":19,"column":0},"action":"insert","lines":["/app/models/api/balances.rb:",""]},{"start":{"row":19,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["\t24:     def show(api_params, &block)","\t25:       @balance = api_request(BALANCES, SHOW,api_params)","",""]},{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["/app/models/api/components.rb:",""]},{"start":{"row":23,"column":0},"end":{"row":26,"column":0},"action":"insert","lines":["\t25:     def show(api_params, &_block)","\t26:       @components = api_request(COMPONENTS, SHOW, api_params)[:body]","",""]},{"start":{"row":26,"column":0},"end":{"row":27,"column":0},"action":"insert","lines":["/app/models/api/events.rb:",""]},{"start":{"row":27,"column":0},"end":{"row":29,"column":0},"action":"insert","lines":["\t43:             raw = api_request(EVENTS, SHOW, api_params)","",""]},{"start":{"row":29,"column":0},"end":{"row":30,"column":0},"action":"insert","lines":["/app/models/api/marketplaces.rb:",""]},{"start":{"row":30,"column":0},"end":{"row":34,"column":0},"action":"insert","lines":["\t54:     # This shows a single marketplace item. eg: 1-Ubuntu (Refer Marketplaces::list for more info)","\t55:     def show(api_params)","\t56:       raw = api_request(MARKETPLACES, SHOW,api_params)","",""]},{"start":{"row":34,"column":0},"end":{"row":38,"column":0},"action":"insert","lines":["/app/models/api/promos.rb:","\t23:     def show(api_params, &block)","\t24:       promo = api_request(PROMOS, SHOW,api_params)","",""]},{"start":{"row":38,"column":0},"end":{"row":42,"column":0},"action":"insert","lines":["/app/models/api/snapshots.rb:","\t29:             @snapshots_per = api_request(SNAPSHOTS, SHOW, params)","","/app/models/api/sshkeys.rb:",""]},{"start":{"row":42,"column":0},"end":{"row":48,"column":0},"action":"insert","lines":["\t53:     def show(api_params, &_block)","\t54:       raw = api_request(SSHKEYS, SHOW, api_params)","","/app/models/api/subscriptions.rb:","\t20:              api_request(SUBSCRIPTIONS,SHOW, params)","",""]},{"start":{"row":48,"column":0},"end":{"row":49,"column":0},"action":"insert","lines":["Found 22 matches in 12 files ",""]},{"start":{"row":49,"column":0},"end":{"row":50,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":40},"end":{"row":0,"column":71},"action":"insert","lines":[" (Found 22 matches in 12 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":50,"column":0},"action":"remove","lines":["Searching for \u0001SHOW\u0001 in\u0001/app/models/api\u0001 (Found 22 matches in 12 files)","","/app/models/api/accounts.rb:","\t25:       result = api_request(ACCOUNT,SHOW, params)    ","","/app/models/api/addons.rb:","\t27:         # This shows a single marketplace item. eg: 1-Ubuntu (Refer Marketplaces::list for more info)","\t28:         def show(api_params)","\t29:             raw = api_request(ADDONS, SHOW, api_params)","","/app/models/api/assemblies.rb:","\t88:                         Api::Assembly.new.show(api_params.merge(id: one_assembly, asms_id: one_assemblies.id)).baked","","/app/models/api/assembly.rb:","\t33:     def show(api_params, &_block)","\t34:       raw = api_request(ASSEMBLY, SHOW, api_params)","\t62:             one_component = Components.new.show(api_params.merge('id' => one_component)).components","","/app/models/api/balances.rb:","\t24:     def show(api_params, &block)","\t25:       @balance = api_request(BALANCES, SHOW,api_params)","","/app/models/api/components.rb:","\t25:     def show(api_params, &_block)","\t26:       @components = api_request(COMPONENTS, SHOW, api_params)[:body]","","/app/models/api/events.rb:","\t43:             raw = api_request(EVENTS, SHOW, api_params)","","/app/models/api/marketplaces.rb:","\t54:     # This shows a single marketplace item. eg: 1-Ubuntu (Refer Marketplaces::list for more info)","\t55:     def show(api_params)","\t56:       raw = api_request(MARKETPLACES, SHOW,api_params)","","/app/models/api/promos.rb:","\t23:     def show(api_params, &block)","\t24:       promo = api_request(PROMOS, SHOW,api_params)","","/app/models/api/snapshots.rb:","\t29:             @snapshots_per = api_request(SNAPSHOTS, SHOW, params)","","/app/models/api/sshkeys.rb:","\t53:     def show(api_params, &_block)","\t54:       raw = api_request(SSHKEYS, SHOW, api_params)","","/app/models/api/subscriptions.rb:","\t20:              api_request(SUBSCRIPTIONS,SHOW, params)","","Found 22 matches in 12 files ","",""],"id":8},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001NotReached\u0001 in\u0001/app/models\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/app/models/api_dispatcher.rb:",""],"id":9},{"start":{"row":3,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["\t5:     class ApiDispatcher::NotReached < StandardError; end","\t77:             raise ApiDispatcher::NotReached","",""]}],[{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["Found 2 matches in 1 file ",""],"id":10}],[{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":11},{"start":{"row":0,"column":42},"end":{"row":0,"column":70},"action":"insert","lines":[" (Found 2 matches in 1 file)"]}],[{"start":{"row":0,"column":0},"end":{"row":8,"column":0},"action":"remove","lines":["Searching for \u0001NotReached\u0001 in\u0001/app/models\u0001 (Found 2 matches in 1 file)","","/app/models/api_dispatcher.rb:","\t5:     class ApiDispatcher::NotReached < StandardError; end","\t77:             raise ApiDispatcher::NotReached","","Found 2 matches in 1 file ","",""],"id":12},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001NotReached\u0001 in\u0001/app/models\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/app/models/api_dispatcher.rb:",""],"id":13},{"start":{"row":3,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["\t5:     class ApiDispatcher::NotReached < StandardError","\t81:             raise ApiDispatcher::NotReached.new(se.message)","",""]}],[{"start":{"row":6,"column":0},"end":{"row":7,"column":0},"action":"insert","lines":["Found 2 matches in 1 file ",""],"id":14},{"start":{"row":7,"column":0},"end":{"row":8,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":42},"end":{"row":0,"column":70},"action":"insert","lines":[" (Found 2 matches in 1 file)"]}],[{"start":{"row":0,"column":0},"end":{"row":8,"column":0},"action":"remove","lines":["Searching for \u0001NotReached\u0001 in\u0001/app/models\u0001 (Found 2 matches in 1 file)","","/app/models/api_dispatcher.rb:","\t5:     class ApiDispatcher::NotReached < StandardError","\t81:             raise ApiDispatcher::NotReached.new(se.message)","","Found 2 matches in 1 file ","",""],"id":15},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001NotReached\u0001 in\u0001/\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/app/controllers/ssh_keys_controller.rb:",""],"id":16},{"start":{"row":3,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["\t69:   rescue ApiDispatcher::NotReached","",""]},{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["/app/controllers/users_controller.rb:",""]}],[{"start":{"row":6,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["\t93:     rescue ApiDispatcher::NotReached","\t139:     rescue ApiDispatcher::NotReached","",""],"id":17},{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["/app/models/api_dispatcher.rb:",""]},{"start":{"row":10,"column":0},"end":{"row":13,"column":0},"action":"insert","lines":["\t5:     class ApiDispatcher::NotReached < StandardError","\t81:             raise ApiDispatcher::NotReached.new(se.message)","",""]}],[{"start":{"row":13,"column":0},"end":{"row":16,"column":0},"action":"insert","lines":["/lib/auth/emailchecker_service.rb:","\t13:   rescue ApiDispatcher::NotReached","",""],"id":18}],[{"start":{"row":16,"column":0},"end":{"row":16,"column":1},"action":"insert","lines":["M"],"id":19}],[{"start":{"row":16,"column":1},"end":{"row":16,"column":2},"action":"insert","lines":["u"],"id":20}],[{"start":{"row":16,"column":2},"end":{"row":16,"column":3},"action":"insert","lines":["l"],"id":21}],[{"start":{"row":16,"column":3},"end":{"row":17,"column":0},"action":"insert","lines":["Found 6 matches in 4 files ",""],"id":22}],[{"start":{"row":17,"column":0},"end":{"row":18,"column":0},"action":"insert","lines":["",""],"id":23},{"start":{"row":0,"column":32},"end":{"row":0,"column":64},"action":"insert","lines":[" (MulFound 6 matches in 4 files)"]}],[{"start":{"row":17,"column":0},"end":{"row":18,"column":0},"action":"remove","lines":["",""],"id":24}],[{"start":{"row":16,"column":30},"end":{"row":17,"column":0},"action":"remove","lines":["",""],"id":25}],[{"start":{"row":0,"column":0},"end":{"row":16,"column":30},"action":"remove","lines":["Searching for \u0001NotReached\u0001 in\u0001/\u0001 (MulFound 6 matches in 4 files)","","/app/controllers/ssh_keys_controller.rb:","\t69:   rescue ApiDispatcher::NotReached","","/app/controllers/users_controller.rb:","\t93:     rescue ApiDispatcher::NotReached","\t139:     rescue ApiDispatcher::NotReached","","/app/models/api_dispatcher.rb:","\t5:     class ApiDispatcher::NotReached < StandardError","\t81:             raise ApiDispatcher::NotReached.new(se.message)","","/lib/auth/emailchecker_service.rb:","\t13:   rescue ApiDispatcher::NotReached","","MulFound 6 matches in 4 files "],"id":26},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001MultiJson\u0001 in\u0001/\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/app/controllers/application_controller.rb:",""],"id":27},{"start":{"row":3,"column":0},"end":{"row":11,"column":0},"action":"insert","lines":["\t134:   # 20% slower than calling MultiJSON.dump ourselves. Rails doesn't call","\t135:   # MultiJson.dump when you pass it json: obj but it seems we don't need","\t152:     render json: MultiJson.dump(obj), status: opts[:status] || 200","\t189:     store_preloaded(\"currentUser\", MultiJson.dump(current_user))","\t195:     MultiJson.dump(custom_html)","\t214:     render json: MultiJson.dump(create_errors_json(obj, opts[:type])), status: opts[:status] || 422","\t234:       render json: MultiJson.dump(json)","",""]}],[{"start":{"row":11,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["/config/initializers/100-oj.rb:","\t2: MultiJson.engine = :oj","",""],"id":28},{"start":{"row":14,"column":0},"end":{"row":15,"column":0},"action":"insert","lines":["/lib/site_setting_extension.rb:",""]},{"start":{"row":15,"column":0},"end":{"row":17,"column":0},"action":"insert","lines":["\t170:     MultiJson.dump(Hash[*@client_settings.map{|n| [n, self.send(n)]}.flatten])","",""]}],[{"start":{"row":17,"column":0},"end":{"row":18,"column":0},"action":"insert","lines":["/lib/otp/infobip.rb:",""],"id":29},{"start":{"row":18,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["\t44:     response = client.post(\"/sms/1/text/single\", :json => MultiJson.dump(","","/lib/otp/results.rb:","\t42:     @result_hash = MultiJson.load(\"#{raw_body}\")","",""]}],[{"start":{"row":23,"column":0},"end":{"row":24,"column":0},"action":"insert","lines":["Found 11 matches in 5 files ",""],"id":30},{"start":{"row":24,"column":0},"end":{"row":25,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":31},"end":{"row":0,"column":61},"action":"insert","lines":[" (Found 11 matches in 5 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":25,"column":0},"action":"remove","lines":["Searching for \u0001MultiJson\u0001 in\u0001/\u0001 (Found 11 matches in 5 files)","","/app/controllers/application_controller.rb:","\t134:   # 20% slower than calling MultiJSON.dump ourselves. Rails doesn't call","\t135:   # MultiJson.dump when you pass it json: obj but it seems we don't need","\t152:     render json: MultiJson.dump(obj), status: opts[:status] || 200","\t189:     store_preloaded(\"currentUser\", MultiJson.dump(current_user))","\t195:     MultiJson.dump(custom_html)","\t214:     render json: MultiJson.dump(create_errors_json(obj, opts[:type])), status: opts[:status] || 422","\t234:       render json: MultiJson.dump(json)","","/config/initializers/100-oj.rb:","\t2: MultiJson.engine = :oj","","/lib/site_setting_extension.rb:","\t170:     MultiJson.dump(Hash[*@client_settings.map{|n| [n, self.send(n)]}.flatten])","","/lib/otp/infobip.rb:","\t44:     response = client.post(\"/sms/1/text/single\", :json => MultiJson.dump(","","/lib/otp/results.rb:","\t42:     @result_hash = MultiJson.load(\"#{raw_body}\")","","Found 11 matches in 5 files ","",""],"id":31},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001api_request\u0001 in\u0001/app/models/api\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/app/models/api/accounts.rb:",""],"id":32},{"start":{"row":3,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["\t20:       result = api_request(ACCOUNT,LOGIN, params)    ","\t25:       result = api_request(ACCOUNT,SHOW, params)    ","\t30:       api_request(ACCOUNT, CREATE, params)","\t34:       api_request(ACCOUNT, UPDATE, params)","\t38:       api_request(ACCOUNT, FORGOT, params, true)","\t42:       api_request(ACCOUNT, PASSWORD_RESET, params, true)","",""]}],[{"start":{"row":10,"column":0},"end":{"row":13,"column":0},"action":"insert","lines":["/app/models/api/addons.rb:","\t29:             raw = api_request(ADDONS, SHOW, api_params)","",""],"id":33}],[{"start":{"row":13,"column":0},"end":{"row":14,"column":0},"action":"insert","lines":["/app/models/api/assemblies.rb:",""],"id":34},{"start":{"row":14,"column":0},"end":{"row":17,"column":0},"action":"insert","lines":["\t60:             raw = api_request(ASSEMBLIES, LIST, api_params)","\t68:             api_request(ASSEMBLIES, CREATE, api_params.merge(bld_data))","",""]}],[{"start":{"row":17,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["/app/models/api/assembly.rb:","\t34:       raw = api_request(ASSEMBLY, SHOW, api_params)","\t41:       api_request(ASSEMBLY, UPDATE, api_params) if api_params.key?(:bind_app_flag) # FOR BIND APP","\t46:       api_request(ASSEMBLY, UPGRADE, api_params.merge(bld_upgrade_params(api_params)))","",""],"id":35},{"start":{"row":22,"column":0},"end":{"row":23,"column":0},"action":"insert","lines":["/app/models/api/balances.rb:",""]},{"start":{"row":23,"column":0},"end":{"row":28,"column":0},"action":"insert","lines":["\t25:       @balance = api_request(BALANCES, SHOW,api_params)","","/app/models/api/billedhistories.rb:","\t26:       raw = api_request(BILLEDHISTORIES, LIST, api_params)","",""]}],[{"start":{"row":28,"column":0},"end":{"row":29,"column":0},"action":"insert","lines":["/app/models/api/billingtransactions.rb:",""],"id":36}],[{"start":{"row":29,"column":0},"end":{"row":31,"column":0},"action":"insert","lines":["\t29:              @transactions =api_request(BILLINGTRANSACTIONS, LIST, params)","",""],"id":37}],[{"start":{"row":31,"column":0},"end":{"row":36,"column":0},"action":"insert","lines":["/app/models/api/components.rb:","\t26:       @components = api_request(COMPONENTS, SHOW, api_params)[:body]","\t39:       api_request(COMPONENTS, UPDATE, apiparam)","\t54:       api_request(COMPONENTS, UPDATE, apiparam)","",""],"id":38},{"start":{"row":36,"column":0},"end":{"row":37,"column":0},"action":"insert","lines":["/app/models/api/email_token.rb:",""]},{"start":{"row":37,"column":0},"end":{"row":40,"column":0},"action":"insert","lines":["\t20:       result = api_request(ACCOUNT, CONFIRM_EMAIL, params)","\t25:       api_request(ACCOUNT, CREATE, params)","",""]},{"start":{"row":40,"column":0},"end":{"row":41,"column":0},"action":"insert","lines":["/app/models/api/events.rb:",""]},{"start":{"row":41,"column":0},"end":{"row":44,"column":0},"action":"insert","lines":["\t37:             raw = api_request(EVENTS, LIST, api_params)","\t43:             raw = api_request(EVENTS, SHOW, api_params)","",""]},{"start":{"row":44,"column":0},"end":{"row":45,"column":0},"action":"insert","lines":["/app/models/api/marketplaces.rb:",""]}],[{"start":{"row":45,"column":0},"end":{"row":55,"column":0},"action":"insert","lines":["\t56:       raw = api_request(MARKETPLACES, SHOW,api_params)","\t64:       api_request(MARKETPLACES, LIST,api_params)[:body] unless @marketplace_groups","","/app/models/api/organizations.rb:","\t20:       result = api_request(ORGANIZATION, LIST, params)","\t25:       api_request(ORGANIZATION, UPDATE,params)","","/app/models/api/promos.rb:","\t24:       promo = api_request(PROMOS, SHOW,api_params)","",""],"id":39},{"start":{"row":55,"column":0},"end":{"row":58,"column":0},"action":"insert","lines":["/app/models/api/requests.rb:","\t27:       raw = api_request(REQUESTS, CREATE, api_params)","",""]},{"start":{"row":58,"column":0},"end":{"row":62,"column":0},"action":"insert","lines":["/app/models/api/snapshots.rb:","\t29:             @snapshots_per = api_request(SNAPSHOTS, SHOW, params)","\t35:             @snapshots_all = api_request(SNAPSHOTS, LIST, params)","",""]},{"start":{"row":62,"column":0},"end":{"row":68,"column":0},"action":"insert","lines":["/app/models/api/sshkeys.rb:","\t49:       raw = api_request(SSHKEYS, LIST, api_params)","\t54:       raw = api_request(SSHKEYS, SHOW, api_params)","\t74:       api_request(SSHKEYS, CREATE, api_params)","\t83:       api_request(SSHKEYS, CREATE, api_params)","",""]},{"start":{"row":68,"column":0},"end":{"row":72,"column":0},"action":"insert","lines":["/app/models/api/subscriptions.rb:","\t20:              api_request(SUBSCRIPTIONS,SHOW, params)","\t25:             api_request(SUBSCRIPTIONS, CREATE,params)","",""]},{"start":{"row":72,"column":0},"end":{"row":75,"column":0},"action":"insert","lines":["/app/models/api/team.rb:","\t36:       result = api_request(DOMAIN, LIST, params.merge!({:org_id =>@id}))","",""]},{"start":{"row":75,"column":0},"end":{"row":76,"column":0},"action":"insert","lines":["Found 37 matches in 18 files ",""]},{"start":{"row":76,"column":0},"end":{"row":77,"column":0},"action":"insert","lines":["",""]},{"start":{"row":0,"column":47},"end":{"row":0,"column":78},"action":"insert","lines":[" (Found 37 matches in 18 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":77,"column":0},"action":"remove","lines":["Searching for \u0001api_request\u0001 in\u0001/app/models/api\u0001 (Found 37 matches in 18 files)","","/app/models/api/accounts.rb:","\t20:       result = api_request(ACCOUNT,LOGIN, params)    ","\t25:       result = api_request(ACCOUNT,SHOW, params)    ","\t30:       api_request(ACCOUNT, CREATE, params)","\t34:       api_request(ACCOUNT, UPDATE, params)","\t38:       api_request(ACCOUNT, FORGOT, params, true)","\t42:       api_request(ACCOUNT, PASSWORD_RESET, params, true)","","/app/models/api/addons.rb:","\t29:             raw = api_request(ADDONS, SHOW, api_params)","","/app/models/api/assemblies.rb:","\t60:             raw = api_request(ASSEMBLIES, LIST, api_params)","\t68:             api_request(ASSEMBLIES, CREATE, api_params.merge(bld_data))","","/app/models/api/assembly.rb:","\t34:       raw = api_request(ASSEMBLY, SHOW, api_params)","\t41:       api_request(ASSEMBLY, UPDATE, api_params) if api_params.key?(:bind_app_flag) # FOR BIND APP","\t46:       api_request(ASSEMBLY, UPGRADE, api_params.merge(bld_upgrade_params(api_params)))","","/app/models/api/balances.rb:","\t25:       @balance = api_request(BALANCES, SHOW,api_params)","","/app/models/api/billedhistories.rb:","\t26:       raw = api_request(BILLEDHISTORIES, LIST, api_params)","","/app/models/api/billingtransactions.rb:","\t29:              @transactions =api_request(BILLINGTRANSACTIONS, LIST, params)","","/app/models/api/components.rb:","\t26:       @components = api_request(COMPONENTS, SHOW, api_params)[:body]","\t39:       api_request(COMPONENTS, UPDATE, apiparam)","\t54:       api_request(COMPONENTS, UPDATE, apiparam)","","/app/models/api/email_token.rb:","\t20:       result = api_request(ACCOUNT, CONFIRM_EMAIL, params)","\t25:       api_request(ACCOUNT, CREATE, params)","","/app/models/api/events.rb:","\t37:             raw = api_request(EVENTS, LIST, api_params)","\t43:             raw = api_request(EVENTS, SHOW, api_params)","","/app/models/api/marketplaces.rb:","\t56:       raw = api_request(MARKETPLACES, SHOW,api_params)","\t64:       api_request(MARKETPLACES, LIST,api_params)[:body] unless @marketplace_groups","","/app/models/api/organizations.rb:","\t20:       result = api_request(ORGANIZATION, LIST, params)","\t25:       api_request(ORGANIZATION, UPDATE,params)","","/app/models/api/promos.rb:","\t24:       promo = api_request(PROMOS, SHOW,api_params)","","/app/models/api/requests.rb:","\t27:       raw = api_request(REQUESTS, CREATE, api_params)","","/app/models/api/snapshots.rb:","\t29:             @snapshots_per = api_request(SNAPSHOTS, SHOW, params)","\t35:             @snapshots_all = api_request(SNAPSHOTS, LIST, params)","","/app/models/api/sshkeys.rb:","\t49:       raw = api_request(SSHKEYS, LIST, api_params)","\t54:       raw = api_request(SSHKEYS, SHOW, api_params)","\t74:       api_request(SSHKEYS, CREATE, api_params)","\t83:       api_request(SSHKEYS, CREATE, api_params)","","/app/models/api/subscriptions.rb:","\t20:              api_request(SUBSCRIPTIONS,SHOW, params)","\t25:             api_request(SUBSCRIPTIONS, CREATE,params)","","/app/models/api/team.rb:","\t36:       result = api_request(DOMAIN, LIST, params.merge!({:org_id =>@id}))","","Found 37 matches in 18 files ","",""],"id":40},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001No api\u0001 in\u0001/app/models\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["Found 0 matches in 0 files ",""],"id":41}],[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":42},{"start":{"row":0,"column":38},"end":{"row":0,"column":67},"action":"insert","lines":[" (Found 0 matches in 0 files)"]}],[{"start":{"row":0,"column":0},"end":{"row":4,"column":0},"action":"remove","lines":["Searching for \u0001No api\u0001 in\u0001/app/models\u0001 (Found 0 matches in 0 files)","","Found 0 matches in 0 files ","",""],"id":43},{"start":{"row":0,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["Searching for \u0001No api\u0001 in\u0001your entire workspace\u0001","",""]}],[{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["/lib/vertice_resource.rb:",""],"id":44},{"start":{"row":3,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["\t28:       Rails.logger.debug \"No api #{jlaz}.#{jmethod} found.\"","",""]}],[{"start":{"row":5,"column":0},"end":{"row":6,"column":0},"action":"insert","lines":["/log/development.log:",""],"id":45},{"start":{"row":6,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["\t167: No api Megam::Account.login found.","\t181: No api Megam::Account.login found.","",""]}],[{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["Found 3 matches in 2 files ",""],"id":46}],[{"start":{"row":10,"column":0},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":47},{"start":{"row":0,"column":48},"end":{"row":0,"column":77},"action":"insert","lines":[" (Found 3 matches in 2 files)"]}]]},"ace":{"folds":[],"customSyntax":"c9search","scrolltop":0,"scrollleft":0,"selection":{"start":{"row":3,"column":37},"end":{"row":3,"column":37},"isBackwards":false},"options":{"tabSize":4,"useSoftTabs":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1473663438423}